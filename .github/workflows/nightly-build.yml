name: Nighly build

on:
  schedule:
    - cron: '30 20 * * *'
  workflow_dispatch:

env:
  BUILD_NUMBER: ${{ github.sha }}

jobs:
  release:
    runs-on: ubuntu-20.04

    steps:
      - name: logging
        run: |
          echo build number: ${{ env.BUILD_NUMBER }}

      - name: check out
        uses: actions/checkout@v2

      - name: install packages
        run: yarn install

      - name: dist
        run: yarn run build

      - name: configure amazon ecr account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: login to amazon ecr
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: build and push docker image
        id: build-image
        env:
          image_repo: ${{ steps.login-ecr.outputs.registry }}/c-lab-frontend
          image_tag: nightly-${{ env.BUILD_NUMBER }}
        run: |
          docker build -t $image_repo:$image_tag .
          docker push $image_repo:$image_tag
          echo "image_repo=$image_repo" >> $GITHUB_OUTPUT
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT

      - name: '[Deploy to server] login to docker'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.TESTING_SERVER_HOST }}
          port: ${{ secrets.TESTING_SERVER_PORT }}
          username: ${{ secrets.TESTING_SERVER_USERNAME }}
          password: ${{ secrets.TESTING_SERVER_PASSWORD }}
          script: >
            docker login ${{ steps.login-ecr.outputs.registry }}
            -u ${{ steps.login-ecr.outputs.docker_username_449313530982_dkr_ecr_us_east_2_amazonaws_com }}
            -p ${{ steps.login-ecr.outputs.docker_password_449313530982_dkr_ecr_us_east_2_amazonaws_com }}

      - name: '[Deploy to server] run the image'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.TESTING_SERVER_HOST }}
          port: ${{ secrets.TESTING_SERVER_PORT }}
          username: ${{ secrets.TESTING_SERVER_USERNAME }}
          password: ${{ secrets.TESTING_SERVER_PASSWORD }}
          script: |
            cd ./c-lab-frontend
            docker compose down
            docker system prune -a -f
            IMAGE_REPO=${{ steps.build-image.outputs.image_repo }} IMAGE_TAG=${{ steps.build-image.outputs.image_tag }} docker compose up -d
